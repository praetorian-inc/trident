# Used as inspiration: https://github.com/caddyserver/caddy/blob/master/.github/workflows/ci.yml

name: CI

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master
      - development

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Print Go version and environment
      id: vars
      run: |
        printf "Using go at: $(which go)\n"
        printf "Go version: $(go version)\n"
        printf "\n\nGo environment:\n\n"
        go env
        printf "\n\nSystem environment:\n\n"
        env
        # Calculate the short SHA1 hash of the git commit
        echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
        echo "::set-output name=go_cache::$(go env GOCACHE)"

    # - name: Cache the build cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ${{ steps.vars.outputs.go_cache }}
    #     key: ${{ runner.os }}-go-ci-${{ hashFiles('**/go.sum') }}
    #     restore-keys: |
    #       ${{ runner.os }}-go-ci

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build all binaries
      env:
        CGO_ENABLED: 0
      run: |
        go build ./cmd/...

    # Commented bits below were useful to allow the job to continue
    # even if the tests fail, so we can publish the report separately
    # For info about set-output, see https://stackoverflow.com/questions/57850553/github-actions-check-steps-status
    - name: Run tests
      # id: step_test
      # continue-on-error: true
      run: |
        go test -v -coverprofile="cover-profile.out" -short -race ./...

  # From https://github.com/reviewdog/action-golangci-lint
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2

      - name: Run golangci-lint
        uses: reviewdog/action-golangci-lint@v1
        # uses: docker://reviewdog/action-golangci-lint:v1 # pre-build docker image
        with:
          github_token: ${{ secrets.github_token }}

  goreleaser-check:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: check
        env:
          TAG: ${{ steps.vars.outputs.version_tag }}

