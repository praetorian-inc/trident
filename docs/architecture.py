#!/usr/bin/env python3
# Copyright 2020 Praetorian Security, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by https://diagrams.mingrammer.com
#  > pip install diagrams
#  > python diagram.py
from diagrams import Cluster, Diagram, Edge
from diagrams.gcp.analytics import PubSub
from diagrams.gcp.compute import Run
from diagrams.gcp.database import SQL, Memorystore
from diagrams.gcp.security import IAP
from diagrams.aws.compute import Lambda
from diagrams.k8s.compute import Pod, ReplicaSet
from diagrams.onprem.compute import Server as AuthProvider
from diagrams.programming.language import Go
from diagrams.onprem.client import Client
import os

# find docs/ directory to save png to
docs_dir = os.path.dirname(os.path.realpath(__file__))
output = os.path.join(docs_dir, "architecture")

with Diagram("Trident", filename=output, direction="LR", show=False):

    go = Go("operator")

    with Cluster("GCP Project"):

        with Cluster("Orchestrator"):
            api = Pod("api")
            cloudflare = IAP("cloudflared")

        with Cluster("Eventing"):
            producer = Pod("producer")
            consumer = Pod("consumer")
    
        db = SQL("db")
        cache = Memorystore("redis")

        with Cluster("Dispatchers"):
            dispatcher1 = ReplicaSet("dispatchers")
            dispatcher2 = ReplicaSet("dispatchers")
            dispatcher3 = ReplicaSet("dispatchers")

        pubsub = PubSub("pubsub")

        go >> cloudflare >> api
        api >> Edge() << db
        api >> Edge() << cache
        db >> Edge() << consumer
        cache >> Edge() << producer

        producer >> Edge(label="credentials") >> pubsub
        pubsub >> Edge(label="results") >> consumer

        pubsub >> Edge(label="results") << dispatcher1
        pubsub >> Edge(label="credentials") << dispatcher2
        pubsub >> Edge(label="results") << dispatcher3

    with Cluster("Executors"):

        with Cluster("Google Cloud Run"):
            worker_gcp = Run("worker")

        with Cluster("AWS Lambda"):
            worker_aws = Lambda("worker")

        with Cluster("Cobalt Strike"):
            worker_cs = Client("worker")
    
    with Cluster("Authentication Providers"):
        okta = AuthProvider("okta")
        o365 = AuthProvider("o365")

    dispatcher1 >> worker_gcp
    dispatcher2 >> worker_aws
    dispatcher3 >> worker_cs

    worker_gcp >> okta
    worker_aws >> o365
    worker_cs >> o365

